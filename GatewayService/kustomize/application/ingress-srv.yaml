apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-srv
  annotations:
    kubernetes.io/ingress.class: "gce"
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers:  "Authorization, X-Auth-Request-Email, X-Auth-Request-User, X-Forwarded-Access-Token"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $token $upstream_http_x_auth_request_access_token;
      add_header 'Authorization' $token;
    # cert-manager.io/cluster-issuer: selfsigned-issuer
spec:
  rules:
    # - host: hyves.social
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-clusterip-srv
                port:
                  number: 8080
          - path: /api/users
            pathType: Prefix
            backend:
              service:
                name: user-clusterip-srv
                port:
                  number: 80
  # tls:
  # - hosts:
  #   - bram.dev
  #   secretName: test-app-cert-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: kube-system
spec:
  ingressClassName: nginx
  rules:
  - host: hyves.social
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
  # tls:
  # - hosts:
  #   - bram.dev
  #   secretName: kaas
